[{"/home/felix/code/sturdy-pancake-frontend/src/index.js":"1","/home/felix/code/sturdy-pancake-frontend/src/reportWebVitals.js":"2","/home/felix/code/sturdy-pancake-frontend/src/App.js":"3","/home/felix/code/sturdy-pancake-frontend/src/clients/axiosInstance.js":"4","/home/felix/code/sturdy-pancake-frontend/src/components/Plants/ViewPlant.jsx":"5","/home/felix/code/sturdy-pancake-frontend/src/components/Sidebar.jsx":"6","/home/felix/code/sturdy-pancake-frontend/src/components/Breadcrumbs.jsx":"7","/home/felix/code/sturdy-pancake-frontend/src/components/Notifications.jsx":"8","/home/felix/code/sturdy-pancake-frontend/src/components/CentralWindow.jsx":"9","/home/felix/code/sturdy-pancake-frontend/src/components/Dashboard.jsx":"10","/home/felix/code/sturdy-pancake-frontend/src/components/Plants/CreatePlant.jsx":"11","/home/felix/code/sturdy-pancake-frontend/src/components/General/PrivateRoute.jsx":"12","/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Login.jsx":"13","/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Signup.jsx":"14","/home/felix/code/sturdy-pancake-frontend/src/components/Groups/CreateGroup.jsx":"15","/home/felix/code/sturdy-pancake-frontend/src/components/Groups/ViewGroup.jsx":"16","/home/felix/code/sturdy-pancake-frontend/src/components/General/Button.jsx":"17","/home/felix/code/sturdy-pancake-frontend/src/components/Groups/Groupcard.jsx":"18","/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/relativeTime.js":"19","/home/felix/code/sturdy-pancake-frontend/src/components/Plants/PlantCardWrapper.jsx":"20","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/GroupCardSensorBar.jsx":"21","/home/felix/code/sturdy-pancake-frontend/src/components/Plants/Plantcard.jsx":"22","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/GroupCardSensorBarSensor.jsx":"23","/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorUnits.js":"24","/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorName.js":"25","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/PlantCardSensor.jsx":"26","/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorValue.js":"27","/home/felix/code/sturdy-pancake-frontend/src/components/General/ConfirmationModal.jsx":"28","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/PlantViewSensorCard.jsx":"29","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/AdoptSensor.jsx":"30"},{"size":4048,"mtime":1617392065494,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1619209092388,"results":"33","hashOfConfig":"32"},{"size":528,"mtime":1619209092388,"results":"34","hashOfConfig":"32"},{"size":131,"mtime":1619299787582,"results":"35","hashOfConfig":"32"},{"size":2705,"mtime":1619299053731,"results":"36","hashOfConfig":"32"},{"size":585,"mtime":1618780679235,"results":"37","hashOfConfig":"32"},{"size":216,"mtime":1614785285321,"results":"38","hashOfConfig":"32"},{"size":229,"mtime":1614798323863,"results":"39","hashOfConfig":"32"},{"size":255,"mtime":1615139385666,"results":"40","hashOfConfig":"32"},{"size":1302,"mtime":1616880854051,"results":"41","hashOfConfig":"32"},{"size":1967,"mtime":1617393780798,"results":"42","hashOfConfig":"32"},{"size":348,"mtime":1617658581373,"results":"43","hashOfConfig":"32"},{"size":2834,"mtime":1618953273385,"results":"44","hashOfConfig":"32"},{"size":2878,"mtime":1618953277685,"results":"45","hashOfConfig":"32"},{"size":1808,"mtime":1617135978337,"results":"46","hashOfConfig":"32"},{"size":90,"mtime":1617658593013,"results":"47","hashOfConfig":"32"},{"size":229,"mtime":1617658572673,"results":"48","hashOfConfig":"32"},{"size":1525,"mtime":1617658589305,"results":"49","hashOfConfig":"32"},{"size":581,"mtime":1616613897875,"results":"50","hashOfConfig":"32"},{"size":487,"mtime":1618953289045,"results":"51","hashOfConfig":"32"},{"size":382,"mtime":1618953306585,"results":"52","hashOfConfig":"32"},{"size":620,"mtime":1618868776777,"results":"53","hashOfConfig":"32"},{"size":442,"mtime":1618953310745,"results":"54","hashOfConfig":"32"},{"size":300,"mtime":1616160233738,"results":"55","hashOfConfig":"32"},{"size":383,"mtime":1616082442766,"results":"56","hashOfConfig":"32"},{"size":515,"mtime":1618953314577,"results":"57","hashOfConfig":"32"},{"size":209,"mtime":1616078517364,"results":"58","hashOfConfig":"32"},{"size":630,"mtime":1617658576413,"results":"59","hashOfConfig":"32"},{"size":254,"mtime":1618953330673,"results":"60","hashOfConfig":"32"},{"size":560,"mtime":1619299818677,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"15cqqb",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","errorCount":5,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/felix/code/sturdy-pancake-frontend/src/index.js",["136","137","138","139","140","141"],"import React, { setState, useState, useEffect } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { axiosInstance } from \"./clients/axiosInstance\";\n\nimport Sidebar from \"./components/Sidebar\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport Notifications from \"./components/Notifications\";\nimport CentralWindow from \"./components/CentralWindow\";\nimport Dashboard from \"./components/Dashboard\";\nimport CreatePlant from \"./components/Plants/CreatePlant\";\nimport ViewPlant from \"./components/Plants/ViewPlant\";\nimport PrivateRoute from \"./components/General/PrivateRoute\";\nimport Login from \"./components/Login_Signup/Login\";\nimport Signup from \"./components/Login_Signup/Signup\";\nimport CreateGroup from \"./components/Groups/CreateGroup\";\nimport ViewGroup from \"./components/Groups/ViewGroup\";\n\nfunction App() {\n  const [user, setUser] = useState({ user: null, token: null, auth: false });\n  const history = useHistory();\n  const handleLogin = (user) => {\n    setUser(user);\n  };\n\n  const autoLogin = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!(typeof token == undefined)) {\n      axiosInstance\n        .get(\"auto_login\", { headers: { Authorization: `Bearer ${token}` } })\n        .then(function (response) {\n          if (response.status === 200) {\n            localStorage.setItem(\"token\", response.data.jwt);\n            handleLogin({\n              user: response.username,\n              token: token,\n              auth: true,\n            });\n            history.push(\"/\");\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (user.auth === false) {\n      autoLogin();\n    }\n  });\n\n  return (\n    <Router basename={\"app\"}>\n      <div className=\"container w-screen h-screen p-0 text-textColor-primary\">\n        <div className=\"sticky flex flex-wrap item-center w-screen justify-between\"></div>\n        <div className=\"flex flex-row w-screen h-full\">\n          <Sidebar></Sidebar>\n\n          <CentralWindow>\n            <Switch>\n              <Route\n                path=\"/login\"\n                render={(props) => (\n                  <Login {...props} handleLogin={handleLogin} />\n                )}\n              />\n              <Route path=\"/signup\" render={(props) => <Signup {...props} />} />\n              <PrivateRoute\n                path=\"/plant/new\"\n                auth={user.auth}\n                jwt={user.token}\n                component={CreatePlant}\n                render={(props) => (\n                  <CreatePlant\n                    {...props}\n                    jwt={user.token}\n                    group_id={props.location.state.group_id}\n                  />\n                )}\n              />\n              <PrivateRoute\n                path=\"/group/new\"\n                auth={user.auth}\n                jwt={user.token}\n                component={CreateGroup}\n                render={(props) => <CreateGroup {...props} jwt={user.token} />}\n              />\n              <PrivateRoute\n                path=\"/group/:id\"\n                auth={user.auth}\n                jwt={user.token}\n                component={ViewGroup}\n                render={(props) => <ViewGroup {...props} jwt={user.token} />}\n              />\n              <PrivateRoute\n                path=\"/plants/:id\"\n                auth={user.auth}\n                component={ViewPlant}\n                jwt={user.token}\n                render={(props) => (\n                  <ViewPlant\n                    {...props}\n                    jwt={user.token}\n                    id={props.match.params.id}\n                  />\n                )}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/\"\n                auth={user.auth}\n                component={Dashboard}\n                jwt={user.token}\n                type={\"production\"}\n              ></PrivateRoute>\n            </Switch>\n          </CentralWindow>\n        </div>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n",["142","143"],"/home/felix/code/sturdy-pancake-frontend/src/reportWebVitals.js",[],"/home/felix/code/sturdy-pancake-frontend/src/App.js",[],"/home/felix/code/sturdy-pancake-frontend/src/clients/axiosInstance.js",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Plants/ViewPlant.jsx",["144","145","146","147","148","149"],"import React, { Component } from \"react\";\nimport { useParams, withRouter, useHistory } from \"react-router-dom\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport PlantViewSensorCard from \"../Sensors/PlantViewSensorCard\";\nimport Button from \"../General/Button\";\nimport ConfirmationModal from \"../General/ConfirmationModal\";\nimport AdoptSensor from \"../Sensors/AdoptSensor\";\n\nclass ViewPlant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      plant: { name: null, detailed_sensor: [] },\n      modal: false,\n      jwt: this.props.jwt,\n      id: this.props.match.params.id,\n    };\n  }\n\n  handleDelete(props) {\n    const { history } = this.props;\n    axiosInstance\n      .delete(`/plants/delete/${this.state.id}`, {\n        headers: { Authorization: `Bearer ${this.state.jwt}` },\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          history.push(\"/\")();\n        }\n      });\n  }\n\n  showDeleteModal(props) {\n    if (this.state.modal) {\n      return (\n        <ConfirmationModal\n          text={\"Are you sure you want to delete this plant\"}\n          function={this.handleDelete}\n        />\n      );\n    }\n  }\n  openDeleteModal(props) {\n    this.setState({\n      modal: true,\n    });\n  }\n\n  image(props){\n    if (!(this.state.plant.image_url === false)) {\n      <img src={this.state.plant.image_url}></img> \n    }\n  }\n\n  componentDidMount(props) {\n    axiosInstance\n      .get(`/plants/${this.state.id}`, {\n        headers: { Authorization: `Bearer ${this.state.jwt}` },\n      })\n      .then((res) => {\n        const groups = res.data;\n        this.setState({\n          isLoaded: true,\n          plant: res.data,\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\" bg-green-light flex-grow\">\n        <div className=\"flex\">\n          <div className=\"flex-1\">\n            {this.showDeleteModal()}\n            Name: {this.state.plant.name}\n            Sensors:{\" \"}\n            {this.state.plant.detailed_sensor.map(function (sensor, index) {\n              return (\n                <PlantViewSensorCard\n                  sensor={sensor}\n                  key={index}\n                ></PlantViewSensorCard>\n              );\n            })}\n          </div>\n          <div className=\"flex-1\">\n            {this.image}\n          </div>\n        </div>\n        <div\n          onClick={() => this.setState({ modal: true })}\n          className=\"flex justify-end pt-2\"\n        >\n          <Button text=\"Delete this Plant\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ViewPlant);\n","/home/felix/code/sturdy-pancake-frontend/src/components/Sidebar.jsx",["150"],"import React, { Children } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends React.Component {\n  render() {\n    return (\n      <div className=\"Sidebar flex-none bg-green-dark p-2 min-h-full w-max \">\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <div className=\"bg-gray p-2\"> Sturdy Pancake! </div>\n            </Link>\n          </li>\n          <hr />\n          <li>How to use ?</li>\n          <hr />\n          <li>Hardware</li>\n          <hr />\n          <li>F.A.Q.</li>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Sidebar;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Breadcrumbs.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Notifications.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/CentralWindow.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Dashboard.jsx",["151","152"],"import React from \"react\";\nimport { axiosInstance } from '../clients/axiosInstance';\nimport GroupCard from \"../components/Groups/Groupcard\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Button from \"./General/Button\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      groups: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.type === \"production\") {\n      axiosInstance.get(`dashboard`,\n      { headers: {\"Authorization\" : `Bearer ${this.props.jwt}`} })\n        .then(res => {\n          const groups = res.data;\n          this.setState({\n            isLoaded: true,\n            groups: groups,\n          })\n        });\n    }\n\n  }\n  render() {\n    return (\n      <div className=\"Dashboard overflow-scroll\">\n        {(this.state.isLoaded = false && <h2>Fetching Data!</h2>)}\n        {this.state.groups.map((group) => (\n          <GroupCard key={group.id} group={group}/>\n        ))}\n                <Link\n          to={{\n            pathname: \"/group/new\",\n          }}\n        >\n          {\" \"}\n          <div className=\"flex justify-end pt-2\">\n            <Button text=\"Add a new Group\" />\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Plants/CreatePlant.jsx",["153","154"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst CreatePlant = (props) => {\n  const history = useHistory();\n\n  const group_id = props.location.state.group_id;\n  return (\n    <div className=\"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\">\n      <h1>Sturdy Pancake! </h1>\n      <Formik\n        className=\"flex flex-col\"\n        initialValues={{\n          name: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n          const data = {\n            group_id: group_id,\n            name: values.name,\n          };\n          const headers = { Authorization: `Bearer ${props.jwt}` };\n\n          axiosInstance\n            .post(\"plants/create\", data, { headers: headers })\n            .then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                history.push(`/plants/${response.data.id}`);\n              }\n            });\n\n          //        alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form className=\"flex flex-col justify-center align-content-center text-center w-1/5\">\n          <label htmlFor=\"Username\" className=\"text-green-dark\">\n            Plant Name\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Plant Name\"\n          />\n          <div>\n            <button\n              className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default CreatePlant;\n","/home/felix/code/sturdy-pancake-frontend/src/components/General/PrivateRoute.jsx",["155"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  console.log(),\n  (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? <Component {...rest} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n);\n\nexport default PrivateRoute;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Login.jsx",["156"],"import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction Login(props) {\n  const history = useHistory();\n  const error_message = \"\";\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\">\n      <h1>Sturdy Pancake! </h1>\n      <Formik\n        className=\"flex flex-col\"\n        initialValues={{\n          username: \"\",\n          password: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n\n          axiosInstance\n            .post(\"login\", {\n              username: values.username,\n              password: values.password,\n            })\n            .then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                localStorage.setItem(\"token\", response.data.jwt);\n                props.handleLogin({\n                  user: response.data.user.username,\n                  token: response.data.jwt,\n                  auth: true,\n                });\n                history.push(\"/\");\n              }\n            })\n            .catch((err) => {\n              if (err.response.status === 401) {\n                setErrorMessage(\"Wrong Password\");\n\n                return;\n              }\n              return console.log(err);\n            });\n\n          //        alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form className=\"flex flex-col justify-center align-content-center text-center w-1/5\">\n          <label htmlFor=\"Username\" className=\"text-green-dark\">\n            Username\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"User\"\n          />\n\n          <label htmlFor=\"lastName\" className=\"text-green-dark\">\n            Password\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <div>\n            <button\n              className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      </Formik>\n      <Link to=\"/signup\">\n        <button className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\">\n          Sign up\n        </button>\n      </Link>\n      {ErrorMessage}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Signup.jsx",["157"],"import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction Signup(props) {\n  const history = useHistory();\n\n  return (\n    <div className=\"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\">\n      <h1>Sturdy Pancake! </h1>\n      <Formik\n        className=\"flex flex-col\"\n        initialValues={{\n          username: \"\",\n          password: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n\n          axiosInstance\n            .post(\"user\", {\n              username: values.username,\n              password: values.password,\n            })\n            .then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                localStorage.setItem(\"token\", response.data.jwt);\n                props.handleLogin({\n                  user: response.data.user.username,\n                  token: response.data.jwt,\n                  auth: true,\n                });\n                history.push(\"/\");\n              }\n            });\n\n          //        alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form className=\"flex flex-col justify-center align-content-center text-center w-1/5\">\n          <label htmlFor=\"Username\" className=\"text-green-dark\">\n            Username\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"User\"\n          />\n\n          <label htmlFor=\"password\" className=\"text-green-dark\">\n            Password\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <label htmlFor=\"password\" className=\"text-green-dark\">\n            Confirm Password\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <div>\n            <Link to=\"/login\">\n              <button\n                className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n                type=\"submit\"\n              >\n                Login\n              </button>\n            </Link>\n            <button\n              className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n              type=\"submit\"\n            >\n              Sign up\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default Signup;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Groups/CreateGroup.jsx",["158","159"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nexport default function CreateGroup(props) {\n  const history = useHistory();\n  return (\n    <div className=\"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\">\n      <Formik\n        className=\"flex flex-col\"\n        initialValues={{\n          name: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n          const data = {\n            name: values.name,\n          };\n          const headers = { Authorization: `Bearer ${props.jwt}` };\n\n          axiosInstance\n            .post(\"groups/create\", data, { headers: headers })\n            .then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                history.push(`/`);\n              }\n            });\n\n          //        alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form className=\"flex flex-col justify-center align-content-center text-center w-1/5\">\n          <label htmlFor=\"Username\" className=\"text-green-dark\">\n            Group Name\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Group Name\"\n          />\n          <div>\n            <button\n              className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","/home/felix/code/sturdy-pancake-frontend/src/components/Groups/ViewGroup.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/General/Button.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Groups/Groupcard.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/relativeTime.js",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Plants/PlantCardWrapper.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/GroupCardSensorBar.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Plants/Plantcard.jsx",["160"],"import React from \"react\";\nimport PlantCardSensor from \"../Sensors/PlantCardSensor\";\n\nclass Plantcard extends React.Component {\n  render() {\n    return (\n      <div className=\"PlantCard cursor-pointer bg-white m-5 pb-3 rounded-xl shadow-2xl hover:shadow-none duration-300\">\n        <img src={this.props.plant.image_url} />\n        <h2 className=\"text-textColor-darkgreen p-2\">\n          {this.props.plant.name}\n        </h2>\n        {this.props.plant.sensors.map(function (sensor, index) {\n          return <PlantCardSensor sensor={sensor} key={index} />;\n        })}\n      </div>\n    );\n  }\n}\nexport default Plantcard;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/GroupCardSensorBarSensor.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorUnits.js",["161","162","163","164","165"],"function sensorUnit(params) {\n  switch (params) {\n    case \"soil_moisture\":\n      return \"%\";\n      break;\n    case \"light\":\n      return \"lux\";\n      break;\n    case \"humidity\":\n      return \"%\";\n      break;\n    case \"temperature\":\n      return \"°C\";\n      break;\n  }\n}\nexport default sensorUnit;\n","/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorName.js",["166","167","168","169","170"],"function SensorName(params) {\n    switch (params) {\n        case \"soil_moisture\":\n          return \"Soil Moisture\";\n          break;\n        case \"light\":\n          return \"Light\";\n          break;\n        case \"humidity\":\n          return \"Humidity\";\n          break;\n        case \"temperature\":\n          return \"Temperature\";\n          break;\n      } \n}\n\nexport default SensorName","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/PlantCardSensor.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorValue.js",[],"/home/felix/code/sturdy-pancake-frontend/src/components/General/ConfirmationModal.jsx",["171","172","173"],"import Button from \"../General/Button\";\nimport React, { setState, useState, useEffect } from \"react\";\n\nexport default function ConfirmationModal(props) {\n  return (\n    <div className=\"fixed w-full h-full bg-gray-200 flex justify-center items-center \">\n      <div className=\"absolute bg-white z-50 flex justify-center mx-auto p-5 rounded-lg\">\n        <div className=\"justify-center text-center text-green-dark\">\n          {props.text}\n        </div>\n        <br />\n        <div onClick={props.function} className=\"flex justify-end pt-2\">\n          <Button text=\"Delete this Plant\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/PlantViewSensorCard.jsx",[],"/home/felix/code/sturdy-pancake-frontend/src/components/Sensors/AdoptSensor.jsx",["174","175","176","177","178","179","180","181"],{"ruleId":"182","severity":1,"message":"183","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"186","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":7},{"ruleId":"182","severity":1,"message":"187","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":10},{"ruleId":"182","severity":1,"message":"188","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":11},{"ruleId":"182","severity":1,"message":"189","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":19},{"ruleId":"182","severity":1,"message":"190","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":21},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"182","severity":1,"message":"195","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"196","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":19},{"ruleId":"182","severity":1,"message":"197","line":2,"column":33,"nodeType":"184","messageId":"185","endLine":2,"endColumn":43},{"ruleId":"182","severity":1,"message":"198","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":54,"column":7,"nodeType":"201","endLine":54,"endColumn":45},{"ruleId":"182","severity":1,"message":"202","line":64,"column":15,"nodeType":"184","messageId":"185","endLine":64,"endColumn":21},{"ruleId":"182","severity":1,"message":"203","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"197","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":34,"column":11,"nodeType":"206","endLine":34,"endColumn":21},{"ruleId":"182","severity":1,"message":"207","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":16},{"ruleId":"182","severity":1,"message":"186","line":5,"column":22,"nodeType":"184","messageId":"185","endLine":5,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":5,"column":16,"nodeType":"210","messageId":"211","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"212","line":8,"column":9,"nodeType":"184","messageId":"185","endLine":8,"endColumn":22},{"ruleId":"182","severity":1,"message":"213","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"207","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":16},{"ruleId":"182","severity":1,"message":"186","line":5,"column":22,"nodeType":"184","messageId":"185","endLine":5,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":8,"column":9,"nodeType":"201","endLine":8,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":2,"column":3,"nodeType":"216","messageId":"217","endLine":15,"endColumn":4},{"ruleId":"218","severity":1,"message":"219","line":5,"column":7,"nodeType":"220","messageId":"221","endLine":5,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":8,"column":7,"nodeType":"220","messageId":"221","endLine":8,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":11,"column":7,"nodeType":"220","messageId":"221","endLine":11,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":14,"column":7,"nodeType":"220","messageId":"221","endLine":14,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":2,"column":5,"nodeType":"216","messageId":"217","endLine":15,"endColumn":8},{"ruleId":"218","severity":1,"message":"219","line":5,"column":11,"nodeType":"220","messageId":"221","endLine":5,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":8,"column":11,"nodeType":"220","messageId":"221","endLine":8,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":11,"column":11,"nodeType":"220","messageId":"221","endLine":11,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":14,"column":11,"nodeType":"220","messageId":"221","endLine":14,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":2,"column":17,"nodeType":"184","messageId":"185","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"213","line":2,"column":27,"nodeType":"184","messageId":"185","endLine":2,"endColumn":35},{"ruleId":"182","severity":1,"message":"222","line":2,"column":37,"nodeType":"184","messageId":"185","endLine":2,"endColumn":46},{"ruleId":"182","severity":1,"message":"223","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"224","line":5,"column":19,"nodeType":"184","messageId":"185","endLine":5,"endColumn":29},{"ruleId":"225","severity":2,"message":"226","line":5,"column":33,"nodeType":"184","messageId":"227","endLine":5,"endColumn":41},{"ruleId":"225","severity":2,"message":"228","line":5,"column":42,"nodeType":"184","messageId":"227","endLine":5,"endColumn":54},{"ruleId":"225","severity":2,"message":"229","line":6,"column":3,"nodeType":"184","messageId":"227","endLine":6,"endColumn":12},{"ruleId":"230","severity":1,"message":"231","line":6,"column":13,"nodeType":"232","endLine":20,"endColumn":4},{"ruleId":"225","severity":2,"message":"233","line":19,"column":5,"nodeType":"184","messageId":"227","endLine":19,"endColumn":12},{"ruleId":"225","severity":2,"message":"234","line":19,"column":13,"nodeType":"184","messageId":"227","endLine":19,"endColumn":19},"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'Breadcrumbs' is defined but never used.","'Notifications' is defined but never used.","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'Component' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'AdoptSensor' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'groups' is assigned a value but never used.","'Children' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'render' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'error_message' is assigned a value but never used.","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useEffect' is defined but never used.","'Sensors' is assigned a value but never used.","'setSensors' is assigned a value but never used.","no-undef","'useState' is not defined.","undef","'initialState' is not defined.","'useEffect' is not defined.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'setData' is not defined.","'result' is not defined.","no-global-assign","no-unsafe-negation"]