{"ast":null,"code":"var _jsxFileName = \"/home/felix/code/sturdy-pancake-frontend/src/components/Plants/ViewPlant.jsx\";\nimport React, { Component } from \"react\";\nimport { useParams, withRouter, useHistory } from \"react-router-dom\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport PlantViewSensorCard from \"../Sensors/PlantViewSensorCard\";\nimport Button from \"../General/Button\";\nimport ConfirmationModal from \"../General/ConfirmationModal\";\nimport AdoptSensor from \"../Sensors/AdoptSensor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ViewPlant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      plant: {\n        name: null,\n        detailed_sensor: []\n      },\n      modal: false,\n      jwt: this.props.jwt,\n      id: this.props.match.params.id\n    };\n  }\n\n  handleDelete(props) {\n    const {\n      history\n    } = this.props;\n    axiosInstance.delete(`/plants/delete/${this.state.id}`, {\n      headers: {\n        Authorization: `Bearer ${this.state.jwt}`\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        history.push(\"/\")();\n      }\n    });\n  }\n\n  showDeleteModal(props) {\n    if (this.state.modal) {\n      return /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        text: \"Are you sure you want to delete this plant\",\n        function: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  openDeleteModal(props) {\n    this.setState({\n      modal: true\n    });\n  }\n\n  image(props) {\n    if (!(this.state.plant.image_url === false)) {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: this.state.plant.image_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  componentDidMount(props) {\n    axiosInstance.get(`/plants/${this.state.id}`, {\n      headers: {\n        Authorization: `Bearer ${this.state.jwt}`\n      }\n    }).then(res => {\n      const groups = res.data;\n      this.setState({\n        isLoaded: true,\n        plant: res.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-green-light flex-grow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [this.showDeleteModal(), \"Name: \", this.state.plant.name, \"Sensors:\", \" \", this.state.plant.detailed_sensor.map(function (sensor, index) {\n            return /*#__PURE__*/_jsxDEV(PlantViewSensorCard, {\n              sensor: sensor\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: this.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.setState({\n          modal: true\n        }),\n        className: \"flex justify-end pt-2\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Delete this Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ViewPlant);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/felix/code/sturdy-pancake-frontend/src/components/Plants/ViewPlant.jsx"],"names":["React","Component","useParams","withRouter","useHistory","axiosInstance","PlantViewSensorCard","Button","ConfirmationModal","AdoptSensor","ViewPlant","constructor","props","handleDelete","bind","state","error","isLoaded","plant","name","detailed_sensor","modal","jwt","id","match","params","history","delete","headers","Authorization","then","response","status","push","showDeleteModal","openDeleteModal","setState","image","image_url","componentDidMount","get","res","groups","data","render","map","sensor","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { useParams, withRouter, useHistory } from \"react-router-dom\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport PlantViewSensorCard from \"../Sensors/PlantViewSensorCard\";\nimport Button from \"../General/Button\";\nimport ConfirmationModal from \"../General/ConfirmationModal\";\nimport AdoptSensor from \"../Sensors/AdoptSensor\";\n\nclass ViewPlant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      plant: { name: null, detailed_sensor: [] },\n      modal: false,\n      jwt: this.props.jwt,\n      id: this.props.match.params.id,\n    };\n  }\n\n  handleDelete(props) {\n    const { history } = this.props;\n    axiosInstance\n      .delete(`/plants/delete/${this.state.id}`, {\n        headers: { Authorization: `Bearer ${this.state.jwt}` },\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          history.push(\"/\")();\n        }\n      });\n  }\n\n  showDeleteModal(props) {\n    if (this.state.modal) {\n      return (\n        <ConfirmationModal\n          text={\"Are you sure you want to delete this plant\"}\n          function={this.handleDelete}\n        />\n      );\n    }\n  }\n  openDeleteModal(props) {\n    this.setState({\n      modal: true,\n    });\n  }\n\n  image(props){\n    if (!(this.state.plant.image_url === false)) {\n      <img src={this.state.plant.image_url}></img> \n    }\n  }\n\n  componentDidMount(props) {\n    axiosInstance\n      .get(`/plants/${this.state.id}`, {\n        headers: { Authorization: `Bearer ${this.state.jwt}` },\n      })\n      .then((res) => {\n        const groups = res.data;\n        this.setState({\n          isLoaded: true,\n          plant: res.data,\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\" bg-green-light flex-grow\">\n        <div className=\"flex\">\n          <div className=\"flex-1\">\n            {this.showDeleteModal()}\n            Name: {this.state.plant.name}\n            Sensors:{\" \"}\n            {this.state.plant.detailed_sensor.map(function (sensor, index) {\n              return (\n                <PlantViewSensorCard\n                  sensor={sensor}\n                  key={index}\n                ></PlantViewSensorCard>\n              );\n            })}\n          </div>\n          <div className=\"flex-1\">\n            {this.image}\n          </div>\n        </div>\n        <div\n          onClick={() => this.setState({ modal: true })}\n          className=\"flex justify-end pt-2\"\n        >\n          <Button text=\"Delete this Plant\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ViewPlant);\n"]},"metadata":{},"sourceType":"module"}