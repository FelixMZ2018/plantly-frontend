{"ast":null,"code":"var _jsxFileName = \"/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(props) {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sturdy Pancake! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      className: \"flex flex-col\",\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 500));\n        axiosInstance.post(\"user\", {\n          username: values.username,\n          password: values.password\n        }).then(function (response) {\n          console.log(response);\n\n          if (response.status === 200) {\n            localStorage.setItem(\"token\", response.data.jwt);\n            props.handleLogin({\n              user: response.data.user.username,\n              token: response.data.jwt,\n              auth: true\n            });\n            history.push(\"/\");\n          }\n        }); //        alert(JSON.stringify(values, null, 2));\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"flex flex-col justify-center align-content-center text-center w-1/5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Username\",\n          className: \"text-green-dark\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"self-center text-green-dark\",\n          id: \"username\",\n          name: \"username\",\n          placeholder: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"text-green-dark\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"self-center text-green-dark\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"text-green-dark\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"self-center text-green-dark\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\",\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\",\n            type: \"submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/felix/code/sturdy-pancake-frontend/src/components/Login_Signup/Signup.jsx"],"names":["React","useState","Formik","Field","Form","axiosInstance","useHistory","Link","Signup","props","history","username","password","values","Promise","r","setTimeout","post","then","response","console","log","status","localStorage","setItem","data","jwt","handleLogin","user","token","auth","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { axiosInstance } from \"../../clients/axiosInstance\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction Signup(props) {\n  const history = useHistory();\n\n  return (\n    <div className=\"flex flex-col flex_nowrap justify-center content-center text-center items-center w-full bg-green-light\">\n      <h1>Sturdy Pancake! </h1>\n      <Formik\n        className=\"flex flex-col\"\n        initialValues={{\n          username: \"\",\n          password: \"\",\n        }}\n        onSubmit={async (values) => {\n          await new Promise((r) => setTimeout(r, 500));\n\n          axiosInstance\n            .post(\"user\", {\n              username: values.username,\n              password: values.password,\n            })\n            .then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                localStorage.setItem(\"token\", response.data.jwt);\n                props.handleLogin({\n                  user: response.data.user.username,\n                  token: response.data.jwt,\n                  auth: true,\n                });\n                history.push(\"/\");\n              }\n            });\n\n          //        alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        <Form className=\"flex flex-col justify-center align-content-center text-center w-1/5\">\n          <label htmlFor=\"Username\" className=\"text-green-dark\">\n            Username\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"User\"\n          />\n\n          <label htmlFor=\"password\" className=\"text-green-dark\">\n            Password\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <label htmlFor=\"password\" className=\"text-green-dark\">\n            Confirm Password\n          </label>\n          <Field\n            className=\"self-center text-green-dark\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <div>\n            <Link to=\"/login\">\n              <button\n                className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n                type=\"submit\"\n              >\n                Login\n              </button>\n            </Link>\n            <button\n              className=\"w-1/3 p-2 m-4 bg-green-dark inline rounded-md shadow-lg hover:shadow-sm cursor-pointer self-start\"\n              type=\"submit\"\n            >\n              Sign up\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}