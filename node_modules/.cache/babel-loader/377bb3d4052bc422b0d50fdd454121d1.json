{"ast":null,"code":"function SensorValue(value, high, low) {\n  if (high > low) {\n    return Math.round(value / (high - low) * 100);\n  } else {\n    return Math.round(value / (high - low) * 100);\n  }\n}\n\n_c = SensorValue;\nexport default SensorValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorValue\");","map":{"version":3,"sources":["/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/SensorValue.js"],"names":["SensorValue","value","high","low","Math","round"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA2BC,IAA3B,EAAgCC,GAAhC,EAAqC;AACjC,MAAID,IAAI,GAAGC,GAAX,EAAgB;AACZ,WAAOC,IAAI,CAACC,KAAL,CAAYJ,KAAK,IAAEC,IAAI,GAACC,GAAP,CAAN,GAAmB,GAA9B,CAAP;AACH,GAFD,MAEO;AACH,WAAOC,IAAI,CAACC,KAAL,CAAYJ,KAAK,IAAEC,IAAI,GAACC,GAAP,CAAN,GAAmB,GAA9B,CAAP;AACH;AACJ;;KANQH,W;AAQT,eAAeA,WAAf","sourcesContent":["function SensorValue(value,high,low) {\n    if (high > low) {\n        return Math.round((value/(high-low))*100)\n    } else {\n        return Math.round((value/(high-low))*100)\n    }\n}\n\nexport default SensorValue"]},"metadata":{},"sourceType":"module"}