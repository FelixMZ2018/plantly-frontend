{"ast":null,"code":"var _jsxFileName = \"/home/felix/code/sturdy-pancake-frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { setState, useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory } from \"react-router-dom\";\nimport { axiosInstance } from \"./clients/axiosInstance\";\nimport Sidebar from \"./components/Sidebar\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport Notifications from \"./components/Notifications\";\nimport CentralWindow from \"./components/CentralWindow\";\nimport Dashboard from \"./components/Dashboard\";\nimport CreatePlant from \"./components/Plants/CreatePlant\";\nimport ViewPlant from \"./components/Plants/ViewPlant\";\nimport PrivateRoute from \"./components/General/PrivateRoute\";\nimport Login from \"./components/Login_Signup/Login\";\nimport Signup from \"./components/Login_Signup/Signup\";\nimport CreateGroup from \"./components/Groups/CreateGroup\";\nimport ViewGroup from \"./components/Groups/ViewGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    user: null,\n    token: null,\n    auth: false\n  });\n  const history = useHistory();\n\n  const handleLogin = user => {\n    setUser(user);\n  };\n\n  const autoLogin = () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!(typeof token == undefined)) {\n      axiosInstance.get(\"auto_login\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          localStorage.setItem(\"token\", response.data.jwt);\n          handleLogin({\n            user: response.username,\n            token: token,\n            auth: true\n          });\n          history.push(\"/\");\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (user.auth === false) {\n      autoLogin();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    basename: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container w-screen h-screen p-0 text-textColor-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky flex flex-wrap item-center w-screen justify-between\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row w-screen h-full\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CentralWindow, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n                handleLogin: handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/plant/new\",\n              auth: user.auth,\n              jwt: user.token,\n              component: CreatePlant,\n              render: props => /*#__PURE__*/_jsxDEV(CreatePlant, { ...props,\n                jwt: user.token,\n                group_id: props.location.state.group_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/group/new\",\n              auth: user.auth,\n              jwt: user.token,\n              component: CreateGroup,\n              render: props => /*#__PURE__*/_jsxDEV(CreateGroup, { ...props,\n                jwt: user.token\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/group/:id\",\n              auth: user.auth,\n              jwt: user.token,\n              component: ViewGroup,\n              render: props => /*#__PURE__*/_jsxDEV(ViewGroup, { ...props,\n                jwt: user.token\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/plants/:id\",\n              auth: user.auth,\n              component: ViewPlant,\n              jwt: user.token,\n              render: props => /*#__PURE__*/_jsxDEV(ViewPlant, { ...props,\n                jwt: user.token,\n                id: props.match.params.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/\",\n              auth: user.auth,\n              component: Dashboard,\n              jwt: user.token,\n              type: \"production\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XvsMp1K1rNahKBgv13z8NrkT/GQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/felix/code/sturdy-pancake-frontend/src/index.js"],"names":["React","setState","useState","useEffect","HashRouter","Router","Switch","Route","Link","NavLink","Redirect","useHistory","axiosInstance","Sidebar","Breadcrumbs","Notifications","CentralWindow","Dashboard","CreatePlant","ViewPlant","PrivateRoute","Login","Signup","CreateGroup","ViewGroup","App","user","setUser","token","auth","history","handleLogin","autoLogin","localStorage","getItem","undefined","get","headers","Authorization","then","response","status","setItem","data","jwt","username","push","props","location","state","group_id","match","params","id"],"mappings":"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","sourcesContent":["import React, { setState, useState, useEffect } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { axiosInstance } from \"./clients/axiosInstance\";\n\nimport Sidebar from \"./components/Sidebar\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport Notifications from \"./components/Notifications\";\nimport CentralWindow from \"./components/CentralWindow\";\nimport Dashboard from \"./components/Dashboard\";\nimport CreatePlant from \"./components/Plants/CreatePlant\";\nimport ViewPlant from \"./components/Plants/ViewPlant\";\nimport PrivateRoute from \"./components/General/PrivateRoute\";\nimport Login from \"./components/Login_Signup/Login\";\nimport Signup from \"./components/Login_Signup/Signup\";\nimport CreateGroup from \"./components/Groups/CreateGroup\";\nimport ViewGroup from \"./components/Groups/ViewGroup\";\n\nfunction App() {\n  const [user, setUser] = useState({ user: null, token: null, auth: false });\n  const history = useHistory();\n  const handleLogin = (user) => {\n    setUser(user);\n  };\n\n  const autoLogin = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!(typeof token == undefined)) {\n      axiosInstance\n        .get(\"auto_login\", { headers: { Authorization: `Bearer ${token}` } })\n        .then(function (response) {\n          if (response.status === 200) {\n            localStorage.setItem(\"token\", response.data.jwt);\n            handleLogin({\n              user: response.username,\n              token: token,\n              auth: true,\n            });\n            history.push(\"/\");\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (user.auth === false) {\n      autoLogin();\n    }\n  });\n\n  return (\n    <Router basename={\"app\"}>\n      <div className=\"container w-screen h-screen p-0 text-textColor-primary\">\n        <div className=\"sticky flex flex-wrap item-center w-screen justify-between\"></div>\n        <div className=\"flex flex-row w-screen h-full\">\n          <Sidebar></Sidebar>\n\n          <CentralWindow>\n            <Switch>\n              <Route\n                path=\"/login\"\n                render={(props) => (\n                  <Login {...props} handleLogin={handleLogin} />\n                )}\n              />\n              <Route path=\"/signup\" render={(props) => <Signup {...props} />} />\n              <PrivateRoute\n                path=\"/plant/new\"\n                auth={user.auth}\n                jwt={user.token}\n                component={CreatePlant}\n                render={(props) => (\n                  <CreatePlant\n                    {...props}\n                    jwt={user.token}\n                    group_id={props.location.state.group_id}\n                  />\n                )}\n              />\n              <PrivateRoute\n                path=\"/group/new\"\n                auth={user.auth}\n                jwt={user.token}\n                component={CreateGroup}\n                render={(props) => <CreateGroup {...props} jwt={user.token} />}\n              />\n              <PrivateRoute\n                path=\"/group/:id\"\n                auth={user.auth}\n                jwt={user.token}\n                component={ViewGroup}\n                render={(props) => <ViewGroup {...props} jwt={user.token} />}\n              />\n              <PrivateRoute\n                path=\"/plants/:id\"\n                auth={user.auth}\n                component={ViewPlant}\n                jwt={user.token}\n                render={(props) => (\n                  <ViewPlant\n                    {...props}\n                    jwt={user.token}\n                    id={props.match.params.id}\n                  />\n                )}\n              ></PrivateRoute>\n              <PrivateRoute\n                path=\"/\"\n                auth={user.auth}\n                component={Dashboard}\n                jwt={user.token}\n                type={\"production\"}\n              ></PrivateRoute>\n            </Switch>\n          </CentralWindow>\n        </div>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}