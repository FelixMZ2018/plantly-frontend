{"ast":null,"code":"function relativeTime(time) {\n  const rtf = new Intl.RelativeTimeFormat(\"en\", {\n    numeric: \"auto\"\n  });\n  const seconds = (Date.now() - Date.parse(time)) / 1000;\n\n  if (seconds < 60) {\n    return rtf.format(Math.round(-seconds), \"seconds\");\n  } else if (seconds < 60 * 60) {\n    return rtf.format(Math.round(-seconds / 60), \"minutes\");\n  } else if (seconds < 60 * 60 * 24) {\n    return rtf.format(Math.round(-seconds / (60 * 24)), \"hours\");\n  } else if (seconds > 60 * 60 * 24) {\n    return rtf.format(Math.round(-seconds / (60 * 60 * 24)), \"days\");\n  }\n}\n\nexport default relativeTime;","map":{"version":3,"sources":["/home/felix/code/sturdy-pancake-frontend/src/components/Utilities/relativeTime.js"],"names":["relativeTime","time","rtf","Intl","RelativeTimeFormat","numeric","seconds","Date","now","parse","format","Math","round"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,GAAG,GAAG,IAAIC,IAAI,CAACC,kBAAT,CAA4B,IAA5B,EAAkC;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAlC,CAAZ;AACA,QAAMC,OAAO,GAAG,CAACC,IAAI,CAACC,GAAL,KAAaD,IAAI,CAACE,KAAL,CAAWR,IAAX,CAAd,IAAkC,IAAlD;;AACA,MAAIK,OAAO,GAAG,EAAd,EAAkB;AAChB,WAAOJ,GAAG,CAACQ,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAW,CAACN,OAAZ,CAAX,EAAiC,SAAjC,CAAP;AACD,GAFD,MAEO,IAAIA,OAAO,GAAG,KAAK,EAAnB,EAAuB;AAC5B,WAAOJ,GAAG,CAACQ,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAW,CAACN,OAAD,GAAW,EAAtB,CAAX,EAAsC,SAAtC,CAAP;AACD,GAFM,MAEA,IAAIA,OAAO,GAAG,KAAK,EAAL,GAAU,EAAxB,EAA4B;AACjC,WAAOJ,GAAG,CAACQ,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAW,CAACN,OAAD,IAAY,KAAK,EAAjB,CAAX,CAAX,EAA6C,OAA7C,CAAP;AACD,GAFM,MAEA,IAAIA,OAAO,GAAG,KAAK,EAAL,GAAU,EAAxB,EAA4B;AACjC,WAAOJ,GAAG,CAACQ,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAW,CAACN,OAAD,IAAY,KAAK,EAAL,GAAU,EAAtB,CAAX,CAAX,EAAkD,MAAlD,CAAP;AACD;AACF;;AAED,eAAeN,YAAf","sourcesContent":["function relativeTime(time) {\n  const rtf = new Intl.RelativeTimeFormat(\"en\", { numeric: \"auto\" });\n  const seconds = (Date.now() - Date.parse(time)) / 1000;\n  if (seconds < 60) {\n    return rtf.format(Math.round(-seconds), \"seconds\");\n  } else if (seconds < 60 * 60) {\n    return rtf.format(Math.round(-seconds / 60), \"minutes\");\n  } else if (seconds < 60 * 60 * 24) {\n    return rtf.format(Math.round(-seconds / (60 * 24)), \"hours\");\n  } else if (seconds > 60 * 60 * 24) {\n    return rtf.format(Math.round(-seconds / (60 * 60 * 24)), \"days\");\n  }\n}\n\nexport default relativeTime;\n"]},"metadata":{},"sourceType":"module"}